"""Init

Revision ID: eb9d5877535a
Revises: f8bebcc71489
Create Date: 2024-02-16 17:33:39.187272

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "eb9d5877535a"
down_revision: Union[str, None] = "f8bebcc71489"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "groups",
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.Column("group_name", sa.String(length=30), nullable=True),
        sa.PrimaryKeyConstraint("group_id"),
    )
    op.create_table(
        "teachers",
        sa.Column("teacher_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=30), nullable=True),
        sa.Column("surname", sa.String(length=30), nullable=True),
        sa.Column("email", sa.String(length=30), nullable=True),
        sa.PrimaryKeyConstraint("teacher_id"),
    )
    op.create_table(
        "classes",
        sa.Column("classes_id", sa.Integer(), nullable=False),
        sa.Column("classes_name", sa.String(length=30), nullable=True),
        sa.Column("teacher_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["teacher_id"],
            ["teachers.teacher_id"],
        ),
        sa.PrimaryKeyConstraint("classes_id"),
        sa.UniqueConstraint("teacher_id"),
    )
    op.create_table(
        "students",
        sa.Column("students_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("surname", sa.String(length=50), nullable=True),
        sa.Column("email", sa.String(length=50), nullable=True),
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["groups.group_id"],
        ),
        sa.PrimaryKeyConstraint("students_id"),
        sa.UniqueConstraint("group_id"),
    )
    op.create_table(
        "grades",
        sa.Column("grade_id", sa.Integer(), nullable=False),
        sa.Column("datatime_id", sa.DateTime(), nullable=False),
        sa.Column("classes_id", sa.Integer(), nullable=False),
        sa.Column("student_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["classes_id"],
            ["classes.classes_id"],
        ),
        sa.ForeignKeyConstraint(
            ["student_id"],
            ["students.students_id"],
        ),
        sa.PrimaryKeyConstraint("grade_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("grades")
    op.drop_table("students")
    op.drop_table("classes")
    op.drop_table("teachers")
    op.drop_table("groups")
    # ### end Alembic commands ###
